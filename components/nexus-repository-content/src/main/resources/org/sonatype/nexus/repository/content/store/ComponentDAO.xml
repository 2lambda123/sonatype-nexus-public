<?xml version="1.0" encoding="UTF-8" ?>
<!--

    Sonatype Nexus (TM) Open Source Version
    Copyright (c) 2008-present Sonatype, Inc.
    All rights reserved. Includes the third-party code listed at http://links.sonatype.com/products/nexus/oss/attributions.

    This program and the accompanying materials are made available under the terms of the Eclipse Public License Version 1.0,
    which accompanies this distribution and is available at http://www.eclipse.org/legal/epl-v10.html.

    Sonatype Nexus (TM) Professional Version is available from Sonatype, Inc. "Sonatype" and "Sonatype Nexus" are trademarks
    of Sonatype, Inc. Apache Maven is a trademark of the Apache Software Foundation. M2eclipse is a trademark of the
    Eclipse Foundation. All other trademarks are the property of their respective owners.

-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="${namespace}">

  <insert id="createSchema">
    --
    -- each format has a component table which they can extend
    --
    CREATE TABLE IF NOT EXISTS ${format}_component (
      component_id  INT GENERATED BY DEFAULT AS IDENTITY,
      repository_id INT NOT NULL,
      namespace     VARCHAR NOT NULL,
      name          VARCHAR NOT NULL,
      version       VARCHAR NOT NULL,
      attributes    ${JSON_TYPE} NOT NULL,
      created       TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
      last_updated  TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,

      CONSTRAINT pk_${format}_component_id PRIMARY KEY (component_id),
      CONSTRAINT uk_${format}_component_coordinate UNIQUE (repository_id, namespace, name, version),
      CONSTRAINT fk_${format}_component_repository_id FOREIGN KEY (repository_id)
         REFERENCES ${format}_content_repository (repository_id)
    );
    --
  </insert>

  <sql id="componentNamespaceMatch">
    repository_id = #{repositoryId} AND namespace = #{namespace}
  </sql>

  <sql id="componentCoordinateMatch">
    <include refid="componentNamespaceMatch"/> AND name = #{name} AND version = #{version}
  </sql>

  <sql id="componentMatch">
    <choose>
      <when test="componentId != null">
        component_id = #{componentId}
      </when>
      <otherwise>
        <include refid="componentCoordinateMatch"/>
      </otherwise>
    </choose>
  </sql>

  <select id="browseComponents" resultType="ComponentData">
    SELECT * FROM ${format}_component WHERE repository_id = #{repositoryId}
    <if test="continuationToken != null">
      AND component_id > #{continuationToken}
    </if>
    ORDER BY component_id LIMIT #{limit};
  </select>

  <select id="browseNamespaces" resultType="String">
    SELECT DISTINCT(namespace) FROM ${format}_component WHERE repository_id = #{repositoryId};
  </select>

  <select id="browseNames" resultType="String">
    SELECT DISTINCT(name) FROM ${format}_component WHERE <include refid="componentNamespaceMatch"/>;
  </select>

  <select id="browseVersions" resultType="String">
    SELECT version FROM ${format}_component WHERE <include refid="componentNamespaceMatch"/> AND name = #{name};
  </select>

  <insert id="createComponent" useGeneratedKeys="true" keyProperty="componentId" parameterType="ComponentData">
    INSERT INTO ${format}_component (repository_id, namespace, name, version, attributes)
        VALUES (#{repositoryId}, #{namespace}, #{name}, #{version}, #{attributes});
  </insert>

  <select id="readComponent" resultType="ComponentData">
    SELECT * FROM ${format}_component WHERE <include refid="componentCoordinateMatch"/>;
  </select>

  <update id="updateComponentAttributes" parameterType="ComponentData">
    UPDATE ${format}_component SET attributes = #{attributes}, last_updated = CURRENT_TIMESTAMP
        WHERE <include refid="componentMatch"/> AND attributes != #{attributes};
  </update>

  <delete id="deleteComponent" parameterType="ComponentData">
    DELETE FROM ${format}_component WHERE <include refid="componentMatch"/>;
  </delete>

  <delete id="deleteCoordinate">
    DELETE FROM ${format}_component WHERE <include refid="componentCoordinateMatch"/>;
  </delete>

  <delete id="deleteComponents">
    DELETE FROM ${format}_component WHERE repository_id = #{repositoryId};
  </delete>

</mapper>
